openapi: 3.0.0
info:
  title: User
  version: '1.0'
  description: Api used for operation that have something to do with a local User (besides updating User Anime and Forum information)
  contact:
    name: K. Ziej≈Ço
    email: kziejlo@gmail.com
servers:
  - url: 'http://localhost:3000'
tags:
  - name: keycloak
    description: The endpoint has something to do with a keycloak operation
  - name: profile
    description: The endpoint has something to do with a user profile
paths:
  /auth/login:
    post:
      summary: Login endpoint
      operationId: login
      tags:
        - keycloak
      responses:
        '200':
          description: OK - The login was successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTokenDTO'
              examples:
                Successfull Login Example:
                  value:
                    accessToken: Access Token String
                    expiresIn: 3600
                    refreshToken: Refresh Token String
                    tokenType: Bearer
        '401':
          description: Unauthorized - The credentials were not correct
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Credential Not Correct Error:
                  value:
                    message: Credentials not correct
                    status: 401
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentialsDTO'
            examples:
              Login Credentials Example:
                value:
                  username: username
                  password: pa$$word
        description: User data used to log in the user.
      description: Endpoint used to log in the user.
    parameters: []
  /auth/logout:
    post:
      summary: Logout endpoint
      operationId: logout
      tags:
        - keycloak
      responses:
        '204':
          description: No Content - The user was logged out correctly
        '401':
          description: Unauthorized - The user didn't authenticate correctly or the logout was not correct
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Authentication Error Example:
                  value:
                    message: Authentication Error
                    status: 401
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
        '422':
          description: Unprocessable Entity - One/Both of the tokens are unprocessable (ex. are empty)
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Unproccesable Entity Error Example:
                  value:
                    message: Authentication Error
                    status: 401
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDTO'
            examples:
              Refresh Token Example:
                value:
                  refreshToken: Refresh Token String
        description: The request body contains the refresh token used to refresh the access token.
      parameters:
        - schema:
            type: string
            minLength: 1
          in: header
          name: Authorization
          required: true
          description: The access token used to authenticate the user
      description: Endpoint used to log out the user
      security:
        - BearerToken: []
  /auth/refresh:
    post:
      summary: Refresh access token endpoint
      operationId: refresh-access-token
      tags:
        - keycloak
      responses:
        '200':
          description: OK - The token was successfully refreshed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTokenDTO'
              examples:
                Correct new Tokens Example:
                  value:
                    accessToken: Access Token String
                    expiresIn: 3600
                    refreshToken: Refresh Token String
                    tokenType: Bearer
        '401':
          description: Unauthorized - The user didn't authenticate correctly or the refresh token didn't work
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Authentication Error Example:
                  value:
                    message: Authentication Error
                    status: 401
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      description: Endpoint used to refresh users access tokens
      security:
        - BearerToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDTO'
            examples:
              Refresh Token Example:
                value:
                  refreshToken: Refresh Token String
        description: The request body contains the refresh token used to refresh the access token.
  /auth/register:
    post:
      summary: Registration endpoint
      operationId: register-user
      tags:
        - keycloak
      responses:
        '200':
          description: OK - The user was created correctly in both services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTokenDTO'
              examples:
                Authentication Token after Successfull Registration Example:
                  value:
                    accessToken: Access Token String
                    expiresIn: 3600
                    refreshToken: Refresh Token String
                    tokenType: Bearer
        '409':
          description: Conflict - The username or email is already taken
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Data Already Taken Error Example:
                  value:
                    message: Error Message
                    status: 409
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
        '422':
          description: Unprocessable Entity - The passwords did not match
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Unprocessable Entity Error Example:
                  value:
                    message: Error Message
                    status: 422
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
        '500':
          description: 'Internal Server Error - The user was correctly created in Keycloak, but not in local Database or some other error occurred.'
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Local Registration Error Example:
                  value:
                    message: registration Error Message
                    status: 500
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
                Other Error Example:
                  value:
                    message: Some Other Error Example
                    status: 500
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      description: Endpoint used to register a new user in both the keycloak and local service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationBodyDTO'
            examples:
              Registration Body Example:
                value:
                  username: Username
                  password: Pa$$word
                  matchingPassword: Pa$$word
                  email: user@example.com
        description: Body containing data used for both keycloak and local services
  '/user/{userId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: userId
        in: path
        required: true
        description: ID of the user for which we request the profile
    get:
      summary: Get user profile Endpoint
      tags:
        - profile
      responses:
        '200':
          description: OK - The user was found and a profile was successfully created
          content:
            application/json:
              schema:
                $ref: './CommonModels.yaml#/components/schemas/CompleteUserDTO'
              examples:
                Successfull Example:
                  value:
                    userType: completeUser
                    userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                    username: Username
                    achievements:
                      - id: 5
                        name: Achievement Name
                        description: Achievement Description
                        icon:
                          - U3dhZ2dlciByb2Nrcw==
                          - U3dhZ2dlciByb2Nrcw==
                        points: 10
                        nrOfUsersPosses: 3
                    animeInfos:
                      - id:
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          animeId: 195784
                        status: No Status
                        watchStartDate: '2019-08-24'
                        watchEndDate: '2019-08-24'
                        nrOfEpisodesSeen: 5
                        isFavourite: true
                        modification: '2019-08-24T14:15:22Z'
                        grade: 2
                        review:
                          reviewType: simpleReview
                          id: 1
                          title: The Review Title
                          text: The Review text
                          nrOfUpvotes: 10
                          nrOfDownvotes: 3
                          nrOfHelpfull: 8
                    threads:
                      - threadComplexityType: simpleThread
                        id: 8
                        title: Thread Title
                        nrOfPosts: 4
                        status: OPEN
                        creation: '2019-08-24T14:15:22Z'
                        modification: '2019-08-24T14:15:22Z'
                        creator:
                          userType: simpleUser
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          username: Username
                        category:
                          id: 15
                          name: Category Name
                          description: Category Description
                        tags:
                          - id: 9
                            name: Tag Name
                            importance: LOW
                            color: 'rgb(789, 654, 321)'
                        userStatus:
                          id:
                            userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                            ThreadId: 8
                          watching: true
                          blocked: false
                    posts:
                      - id: 8
                        title: Post Title
                        text: Post Text
                        creation: '2019-08-24'
                        modification: '2019-08-26'
                        creator:
                          userType: simpleUser
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          username: Username
                        nrOfPlus: 6
                        nrOfMinus: 1
                        userStatus:
                          id:
                            userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                            postId: 8
                          liked: true
                          disliked: false
                          reported: false
                      - threadInformation:
                          id: 7
                          title: Thread Title
        '404':
          description: Not Found - The user was not found
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Not Found Error Example:
                  value:
                    message: Not Found Error
                    status: 404
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      operationId: get-user-profile-by-userId
      description: Endpoint used to get a complete user profile using their ID.
  /user/current:
    get:
      summary: Get current user profile Endpoint
      tags:
        - profile
      responses:
        '200':
          description: OK - The profile was successfully created
          content:
            application/json:
              schema:
                $ref: './CommonModels.yaml#/components/schemas/CompleteUserDTO'
              examples:
                Successfull Example:
                  value:
                    userType: completeUser
                    userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                    username: Username
                    achievements:
                      - id: 5
                        name: Achievement Name
                        description: Achievement Description
                        icon:
                          - U3dhZ2dlciByb2Nrcw==
                          - U3dhZ2dlciByb2Nrcw==
                        points: 10
                        nrOfUsersPosses: 3
                    animeInfos:
                      - id:
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          animeId: 195784
                        status: No Status
                        watchStartDate: '2019-08-24'
                        watchEndDate: '2019-08-24'
                        nrOfEpisodesSeen: 5
                        isFavourite: true
                        modification: '2019-08-24T14:15:22Z'
                        grade: 2
                        review:
                          reviewType: simpleReview
                          id: 1
                          title: The Review Title
                          text: The Review text
                          nrOfUpvotes: 10
                          nrOfDownvotes: 3
                          nrOfHelpfull: 8
                    threads:
                      - threadComplexityType: simpleThread
                        id: 7
                        title: Thread Title
                        nrOfPosts: 4
                        status: OPEN
                        creation: '2019-08-24T14:15:22Z'
                        modification: '2019-08-24T14:15:22Z'
                        creator:
                          userType: simpleUser
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          username: Username
                        category:
                          id: 15
                          name: Category Name
                          description: Category Description
                        tags:
                          - id: 9
                            name: Tag Name
                            importance: LOW
                            color: 'rgb(789, 654, 321)'
                        userStatus:
                          id:
                            userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                            ThreadId: 8
                          watching: true
                          blocked: false
                    posts:
                      - id: 8
                        title: Post Title
                        text: Post Text
                        creation: '2019-08-24'
                        modification: '2019-08-26'
                        creator:
                          userType: simpleUser
                          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                          username: Username
                        nrOfPlus: 6
                        nrOfMinus: 1
                        userStatus:
                          id:
                            userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
                            postId: 8
                          liked: true
                          disliked: false
                          reported: false
                      - threadInformation:
                          id: 7
                          title: Thread Title
        '401':
          description: Unauthorized - The user didn't authenticate correctly
          content:
            application/json:
              schema:
                $ref: ./CommonModels.yaml#/components/schemas/ErrorDTO
              examples:
                Authentication Error Example:
                  value:
                    message: Authentication Error
                    status: 401
                    timeStamp: '2019-08-24T14:15:22Z'
                    code: 2c4a230c-5085-4924-a3e1-25fb4fc5965
      operationId: get-current-user-profile
      description: Endpoint to get the authenticated profile information
      security:
        - BearerToken: []
components:
  schemas:
    LoginCredentialsDTO:
      title: Login Credentials DTO
      type: object
      x-examples:
        Login Credentials Example:
          username: username
          password: pa$$word
      description: Class containing user credentials used to log in.
      properties:
        username:
          type: string
          minLength: 1
          description: The username
        password:
          type: string
          format: password
          description: The password. Is encrypted between comunnication
      required:
        - username
        - password
    AuthenticationTokenDTO:
      title: Authentication Token DTO
      type: object
      x-examples:
        Authentication Token Example:
          accessToken: Access Token String
          expiresIn: 3600
          refreshToken: Refresh Token String
          tokenType: Bearer
      description: Class containing necessery information to authenticate a user when requesting something from the backend. The access token needs to be renewed before it expires.
      properties:
        accessToken:
          type: string
          minLength: 1
          description: The bearer access token
        expiresIn:
          type: integer
          minimum: 1
          format: int32
          description: How long does the token stay valid
        refreshToken:
          type: string
          minLength: 1
          description: Token used to refresh the access token
        tokenType:
          type: string
          minLength: 1
          description: What type of token is the access token
      required:
        - accessToken
        - expiresIn
        - refreshToken
        - tokenType
    RefreshTokenDTO:
      title: Refresh Token DTO
      type: object
      x-examples:
        Refresh Token Example:
          refreshToken: Refresh Token String
      description: Class containing the refresh token. Used when refreshing the access token.
      properties:
        refreshToken:
          type: string
          minLength: 1
          description: Token used to refresh the access token
      required:
        - refreshToken
    RegistrationBodyDTO:
      title: Registration Body DTO
      type: object
      description: Class used to register a user in both keycloak and local service.
      properties:
        username:
          type: string
          minLength: 6
          description: The user's username
        password:
          type: string
          format: password
          minLength: 6
          description: The password
        matchingPassword:
          type: string
          format: password
          minLength: 6
          description: The matching password. Should be the same as the password field
        email:
          type: string
          format: email
          description: 'Email of the user, used to send an authentication email'
      required:
        - username
        - password
        - matchingPassword
        - email
      x-examples:
        Registration Body Example:
          username: Username
          password: Pa$$word
          matchingPassword: Pa$$word
          email: user@example.com
  securitySchemes:
    BearerToken:
      $ref: ./CommonModels.yaml#/components/securitySchemes/BearerToken
